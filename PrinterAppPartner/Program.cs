using System;
using System.Collections.Generic;
using System.Windows.Forms;
using EscPOSThermalPrinter.model;
using Newtonsoft.Json;
using WebSocketSharp;
using WebSocketSharp.Server;
using ESCPOS_NET;
using ESC_POS_USB_NET.Printer;
using ESC_POS_USB_NET.Enums;
using System.Drawing;
using System.IO;
using System.IO.Ports;
using ESCPOS_NET.Emitters;
using ESCPOS_NET.Utilities;
using InTheHand.Net.Bluetooth;
using InTheHand.Net.Sockets;
using InTheHand.Net;

namespace PrinterApp {

public static class GlobalStaticVariablesMaintain
    {
        public static bool IsOpen { get; set; }
    }

    public class AccessListOfBluetoothPrinters : WebSocketBehavior
    {

        //https://github.com/inthehand/32feet/wiki
        //https://inthehand.github.io/html/T_InTheHand_Net_Sockets_BluetoothDeviceInfo.htm
        protected override void OnMessage(MessageEventArgs e)
        {
            BluetoothClient localClient = new BluetoothClient();
            BluetoothDeviceInfo[] deviceList = localClient.DiscoverDevices(255, false, true, false, false);
            if (deviceList.Length > 0) { 

                


            foreach (BluetoothDeviceInfo device in deviceList)
                {
                    if (SerialPort.GetPortNames().Length > 0)
                    {
                        foreach (string comPort in SerialPort.GetPortNames())
                        {
                            Send("deviceName=" + device.DeviceName.ToString() + "#comPort="+comPort + "#deviceAddress=" + device.DeviceAddress.ToString());
                        }
                    }
                   
                }
            }

        }
    }

    //end point 1
    public class AccessListOfPrinters : WebSocketBehavior
{
        
        protected override void OnMessage(MessageEventArgs e)
    {
        if (System.Drawing.Printing.PrinterSettings.InstalledPrinters.Count > 0)
        {
            foreach (string printer in System.Drawing.Printing.PrinterSettings.InstalledPrinters) { Send(printer); }
        }
    }
}

    //end point 2
    public class POSMSGES : WebSocketBehavior
    {
        public string yourPrinterName = "POS80(2)";
        public string space = "\x20";//hex unicode for add space in the string
        public string base64Image = "";
        SerialPrinter printerEpsonBluetooth = null;
        //var printerEpsonBluetooth = new SerialPrinter(portName: "COM6", baudRate: 115200);

        public Bitmap base64ImageToBitmap(string base64String)
        {
            Bitmap bmpReturn = null;
            byte[] byteBuffer = Convert.FromBase64String(base64String);
            MemoryStream memoryStream = new MemoryStream(byteBuffer);
            memoryStream.Position = 0;
            bmpReturn = (Bitmap)Bitmap.FromStream(memoryStream);
            memoryStream.Close();
            memoryStream = null;
            byteBuffer = null;
            return bmpReturn;
        }
        public string stringEndToAddSpace(String n, int l)
        {
            string nm = "";
            nm = n;
            for (int i = 0; i < (l - n.Length); i++)
            {
                nm = nm + space;
            }
            return nm;
        }
        public string stringFrontToAddSpace(String n, int l)
        {
            string nm = "";
            for (int i = 0; i < l; i++)
            {
                nm = nm + space;
            }
            return nm + n;
        }

        private void printByBluetooth(RecieptJsonClass recieptJsonClass)
        {
            ByteArrayBuilder byteArrayBuilderForBlueooth = new ByteArrayBuilder();
            
            if(GlobalStaticVariablesMaintain.IsOpen == false){
                GlobalStaticVariablesMaintain.IsOpen = true;
                List<String> bluetoothGet = new List<String>(recieptJsonClass.printerName.ToString().Split("=".ToCharArray()));
                printerEpsonBluetooth = new SerialPrinter(portName: bluetoothGet[1], baudRate: 115200);
            }

            var ep = new EPSON();

            if (!recieptJsonClass.openDrawer.ToString().IsNullOrEmpty() && recieptJsonClass.openDrawer)
            {
                byteArrayBuilderForBlueooth.Append(ep.CashDrawerOpenPin2(120, 240));
            }

            if (!recieptJsonClass.topLogoBase64String.ToString().IsNullOrEmpty())
            { }


            int i = 1;
            if (recieptJsonClass.content.Count > 0)
            {
                foreach (var item in recieptJsonClass.content)
                {
                    Content contentObject = JsonConvert.DeserializeObject<Content>(item.ToString());

                    Boolean v = contentObject.value.ToString().IsNullOrEmpty();
                    Boolean b = contentObject.bold.ToString().IsNullOrEmpty();
                    Boolean u = contentObject.underline.ToString().IsNullOrEmpty();
                    Boolean f = contentObject.fontType.ToString().IsNullOrEmpty();
                    Boolean w = contentObject.size.ToString().IsNullOrEmpty();
                    Boolean br = contentObject.barcode.ToString().IsNullOrEmpty();
                    Boolean qr = contentObject.qrcode.ToString().IsNullOrEmpty();
                    Boolean ac = recieptJsonClass.autoCut.ToString().IsNullOrEmpty();

                    if (!contentObject.align.ToString().IsNullOrEmpty())
                    {
                        if (contentObject.align == "left" || contentObject.align == "right" || contentObject.align == "center")
                        {

                            if (contentObject.align == "left")
                            {
                                byteArrayBuilderForBlueooth.Append(ep.LeftAlign());
                            }
                            else if (contentObject.align == "right")
                            {
                                byteArrayBuilderForBlueooth.Append(ep.RightAlign());

                            }
                            else if (contentObject.align == "center")
                            {
                                byteArrayBuilderForBlueooth.Append(ep.CenterAlign());
                            }
                            else
                            {
                                byteArrayBuilderForBlueooth.Append(ep.LeftAlign());
                            }
                        }
                    }
                    else
                    {
                        byteArrayBuilderForBlueooth.Append(ep.LeftAlign());
                    }

                    if (!w && contentObject.size.ToString().Equals("1"))
                    {
                        byteArrayBuilderForBlueooth.Append(ep.SetStyles(PrintStyle.DoubleWidth));
                        byteArrayBuilderForBlueooth.Append(ep.SetStyles(PrintStyle.DoubleHeight));

                        //printer.NormalWidth();
                    }
                    else if (!w && contentObject.size.ToString().Equals("2"))
                    {
                        byteArrayBuilderForBlueooth.Append(ep.SetStyles(PrintStyle.DoubleWidth));
                        byteArrayBuilderForBlueooth.Append(ep.SetStyles(PrintStyle.DoubleHeight));
                        //printer.DoubleWidth2();
                    }
                    else if (!w && contentObject.size.ToString().Equals("3"))
                    {
                        byteArrayBuilderForBlueooth.Append(ep.Print("\x1b\x45\x01"));
                        //byteArrayBuilder.Append(e.SetStyles(PrintStyle.DoubleWidth));
                        //byteArrayBuilder.Append(e.SetStyles(PrintStyle.DoubleHeight));
                        //printer.DoubleWidth3();
                    }
                    else
                    {
                        byteArrayBuilderForBlueooth.Append(ep.SetStyles(PrintStyle.None));
                        //printer.NormalWidth();
                    }


                    if (!(b) && !(u) && contentObject.bold && contentObject.underline)
                    {

                        byteArrayBuilderForBlueooth.Append(ep.SetStyles(PrintStyle.Bold));
                        byteArrayBuilderForBlueooth.Append(ep.SetStyles(PrintStyle.Underline));
                    }
                    else if (!(b) && !(u) && contentObject.bold && !(contentObject.underline))
                    {
                        byteArrayBuilderForBlueooth.Append(ep.SetStyles(PrintStyle.Bold));
                    }
                    else if (!(b) && !(u) && contentObject.underline && !(contentObject.bold))
                    {
                        byteArrayBuilderForBlueooth.Append(ep.SetStyles(PrintStyle.Underline));
                    }
                    else
                    {
                        byteArrayBuilderForBlueooth.Append(ep.SetStyles(PrintStyle.None));
                    }


                    if (!(br) && v)
                    {
                        byteArrayBuilderForBlueooth.Append(ep.SetBarcodeHeightInDots(300));
                        byteArrayBuilderForBlueooth.Append(ep.SetBarWidth(BarWidth.Thin));
                        byteArrayBuilderForBlueooth.Append(ep.SetBarLabelPosition(BarLabelPrintPosition.None));
                        byteArrayBuilderForBlueooth.Append(ep.PrintBarcode(BarcodeType.CODE128, contentObject.barcode.ToString()));
                        byteArrayBuilderForBlueooth.Append(ep.PrintLine(""));
                    }

                    if (!(qr) && v && !(w))
                    {
                        if (contentObject.size.ToString().Equals("1"))
                        {
                            byteArrayBuilderForBlueooth.Append(ep.PrintQRCode(contentObject.qrcode.ToString(), TwoDimensionCodeType.QRCODE_MODEL2, Size2DCode.NORMAL, CorrectionLevel2DCode.PERCENT_7));
                            byteArrayBuilderForBlueooth.Append(ep.PrintLine(""));

                        }
                        else if (contentObject.size.ToString().Equals("2"))
                        {
                            byteArrayBuilderForBlueooth.Append(ep.PrintQRCode(contentObject.qrcode.ToString(), TwoDimensionCodeType.QRCODE_MODEL2, Size2DCode.LARGE, CorrectionLevel2DCode.PERCENT_7));
                            byteArrayBuilderForBlueooth.Append(ep.PrintLine(""));

                        }
                        else if (contentObject.size.ToString().Equals("0"))
                        {
                            byteArrayBuilderForBlueooth.Append(ep.PrintQRCode(contentObject.qrcode.ToString(), TwoDimensionCodeType.QRCODE_MODEL2, Size2DCode.SMALL, CorrectionLevel2DCode.PERCENT_7));
                            byteArrayBuilderForBlueooth.Append(ep.PrintLine(""));

                        }
                        else
                        {
                            byteArrayBuilderForBlueooth.Append(ep.PrintQRCode(contentObject.qrcode.ToString(), TwoDimensionCodeType.QRCODE_MODEL2, Size2DCode.LARGE, CorrectionLevel2DCode.PERCENT_7));
                            byteArrayBuilderForBlueooth.Append(ep.PrintLine(""));

                        }

                    }

                    if (!contentObject.logoBase64String.ToString().IsNullOrEmpty() && v)
                    {
                        //Bitmap codeBitmap = new Bitmap(base64ImageToBitmap(contentObject.logoBase64String.ToString()));
                        //Image image = (Image)codeBitmap;
                        //ImageConverter converter = new ImageConverter();
                        //byteArrayBuilder.Append(e.PrintImage((byte[])converter.ConvertTo(image, typeof(byte[])), true));
                        //e.PrintImage(File.ReadAllBytes("images/pd-logo-300.png"), true),
                        //printer.Image(image);

                    }

                    if (!(v) && !(f) && contentObject.fontType.ToString().Equals("A"))
                    {
                        //https://escpos.readthedocs.io/en/latest/font_cmds.html
                        byteArrayBuilderForBlueooth.Append(ep.Print("\x1b\x50\x01"));
                        byteArrayBuilderForBlueooth.Append(ep.PrintLine(contentObject.value.ToString()));
                    }
                    if (!(v) && !(f) && !f && contentObject.fontType.ToString().Equals("B"))
                    {
                        byteArrayBuilderForBlueooth.Append(ep.SetStyles(PrintStyle.FontB));
                        byteArrayBuilderForBlueooth.Append(ep.Print("\x1b\x50\x01"));
                        byteArrayBuilderForBlueooth.Append(ep.PrintLine(contentObject.value.ToString()));
                    }
                    if (!(v) && !(f) && contentObject.fontType.ToString().Equals("C"))
                    {
                        //byteArrayBuilder.Append(e.SetStyles(PrintStyle.FontB));
                        byteArrayBuilderForBlueooth.Append(ep.Print("\x1b\x54\x01"));
                        byteArrayBuilderForBlueooth.Append(ep.PrintLine(contentObject.value.ToString()));
                    }
                    if (!(v) && !(f) && contentObject.fontType.ToString().Equals("D"))
                    {
                        byteArrayBuilderForBlueooth.Append(ep.SetStyles(PrintStyle.FontB));
                        byteArrayBuilderForBlueooth.Append(ep.Print("\x1b\x55\x01"));
                        byteArrayBuilderForBlueooth.Append(ep.PrintLine(contentObject.value.ToString()));
                    }
                    if (!(v) && !(f) && contentObject.fontType.ToString().Equals("E"))
                    {
                        byteArrayBuilderForBlueooth.Append(ep.Print("\x1b\x55\x01"));
                        byteArrayBuilderForBlueooth.Append(ep.PrintLine(contentObject.value.ToString()));
                    }

                    if (!contentObject.newLines.ToString().IsNullOrEmpty() && contentObject.newLines > 1)
                    {
                        for (int x = 0; x < contentObject.newLines - 1; x++)
                        {
                            byteArrayBuilderForBlueooth.Append(ep.PrintLine(""));
                        }

                    }

                    if (!contentObject.separator.ToString().IsNullOrEmpty())
                    {
                        byteArrayBuilderForBlueooth.Append(ep.SetStyles(PrintStyle.None));
                        byteArrayBuilderForBlueooth.Append(ep.CenterAlign());
                        //this one for 80mm paper role
                        string sep = "------------------------------------------------";
                        string newSep = "";
                        foreach (char ch in sep)
                        {
                            newSep = newSep + (contentObject.separator.ToString().ToCharArray()[0]);
                        }
                        byteArrayBuilderForBlueooth.Append(ep.PrintLine(newSep));

                    }
                    byteArrayBuilderForBlueooth.Append(ep.SetStyles(PrintStyle.None));

                    i++;
                }
                i = 1;
            }

            byteArrayBuilderForBlueooth.Append(ep.LeftAlign());
            byteArrayBuilderForBlueooth.Append(ep.PrintLine(""));
            byteArrayBuilderForBlueooth.Append(ep.PrintLine(""));
            byteArrayBuilderForBlueooth.Append(ep.PrintLine(""));
            byteArrayBuilderForBlueooth.Append(ep.PrintLine(""));

            if (!recieptJsonClass.autoCut.ToString().IsNullOrEmpty() && recieptJsonClass.autoCut)
            {
                byteArrayBuilderForBlueooth.Append(ep.FullCut());
            }


            try
            {
                printerEpsonBluetooth.Write(byteArrayBuilderForBlueooth.ToArray());
            }
            catch (Exception ex)
            {
                throw ex;
            }

            byteArrayBuilderForBlueooth.Clear();

        }

        private void printByIPAddress(RecieptJsonClass recieptJsonClass)
        {
            //https://github.com/lukevp/ESC-POS-.NET
            ByteArrayBuilder byteArrayBuilder = new ByteArrayBuilder();
            List<String> ipGet = new List<String>(recieptJsonClass.printerName.ToString().Split("=".ToCharArray()));
            
            // Ethernet or WiFi (This uses an Immediate Printer, no live paper status events, but is easier to use)
            var hostnameOrIp = ipGet[1];//"192.168.8.200";
            var port = 0;
            //var printerEpson = new ImmediateNetworkPrinter(new ImmediateNetworkPrinterSettings() { ConnectionString = $"{hostnameOrIp}:{port}", PrinterName ="Thermal Printer" });
            var printerEpson = new ImmediateNetworkPrinter(new ImmediateNetworkPrinterSettings() { ConnectionString = $"{hostnameOrIp}", PrinterName = "Thermal Printer" });

            //print using USB, Bluetooth, or Serial
            //var printerEpson = new SerialPrinter(portName: "COM5", baudRate: 115200);

            //print using Linux output to USB / Serial file
            // var printerEpson = new FilePrinter(filePath: "/dev/usb/lp0");

            //print using Samba
            //var printer = new SambaPrinter(tempFileBasePath: @"C:\Temp", filePath: "\\computer\printer");

            //Style.FontB < Style.None

            var e = new EPSON();

            if (!recieptJsonClass.openDrawer.ToString().IsNullOrEmpty() && recieptJsonClass.openDrawer)
            {
                byteArrayBuilder.Append(e.CashDrawerOpenPin2(120, 240));
            }

            if (!recieptJsonClass.topLogoBase64String.ToString().IsNullOrEmpty())
                 {
                //string imagePath = @"C:\MY DATA FOLDER\Projects\newprinterc\PrinterApp\Icon.bmp";
                //Bitmap codeBitmap = new Bitmap(base64ImageToBitmap(recieptJsonClass.topLogoBase64String.ToString()));
                       
                //Bitmap codeBitmap2 = new Bitmap(Bitmap.FromFile(imagePath));

                //Image image = (Image)codeBitmap2;

                //ImageConverter converter = new ImageConverter();
                //byteArrayBuilder.Append(e.CenterAlign());
                        
                //byteArrayBuilder.Append(e.BufferImage((byte[])converter.ConvertTo(image, typeof(byte[]))));
                //byteArrayBuilder.Append(e.PrintImage(File.ReadAllBytes(imagePath), true));
                //byteArrayBuilder.Append(e.PrintImage((byte[])converter.ConvertTo(image, typeof(byte[])),true));
                //byteArrayBuilder.Append(e.PrintLine("\n\n\n"));
                //e.PrintImage(File.ReadAllBytes("images/pd-logo-300.png"), true),
                //printer.Image(image);
            }


                    int i = 1;
                if (recieptJsonClass.content.Count > 0)
                {
                    foreach (var item in recieptJsonClass.content)
                    {
                        Content contentObject = JsonConvert.DeserializeObject<Content>(item.ToString());

                        Boolean v = contentObject.value.ToString().IsNullOrEmpty();
                        Boolean b = contentObject.bold.ToString().IsNullOrEmpty();
                        Boolean u = contentObject.underline.ToString().IsNullOrEmpty();
                        Boolean f = contentObject.fontType.ToString().IsNullOrEmpty();
                        Boolean w = contentObject.size.ToString().IsNullOrEmpty();
                        Boolean br = contentObject.barcode.ToString().IsNullOrEmpty();
                        Boolean qr = contentObject.qrcode.ToString().IsNullOrEmpty();
                        Boolean ac = recieptJsonClass.autoCut.ToString().IsNullOrEmpty();



                        if (!contentObject.align.ToString().IsNullOrEmpty())
                        {
                            if (contentObject.align == "left" || contentObject.align == "right" || contentObject.align == "center")
                            {

                                if (contentObject.align == "left")
                                {
                                   byteArrayBuilder.Append(e.LeftAlign());
                                }
                                else if (contentObject.align == "right")
                                {
                                byteArrayBuilder.Append(e.RightAlign());

                                }
                                else if (contentObject.align == "center")
                                {
                                byteArrayBuilder.Append(e.CenterAlign());
                                }
                                else
                                {
                                byteArrayBuilder.Append(e.LeftAlign());
                                }
                            }
                        }
                        else
                        {
                        byteArrayBuilder.Append(e.LeftAlign());
                        }

                        if (!w && contentObject.size.ToString().Equals("1"))
                        {
                           byteArrayBuilder.Append(e.SetStyles(PrintStyle.DoubleWidth));
                           byteArrayBuilder.Append(e.SetStyles(PrintStyle.DoubleHeight));

                           //printer.NormalWidth();
                    }
                        else if (!w && contentObject.size.ToString().Equals("2"))
                        {
                        byteArrayBuilder.Append(e.SetStyles(PrintStyle.DoubleWidth));
                        byteArrayBuilder.Append(e.SetStyles(PrintStyle.DoubleHeight));
                        //printer.DoubleWidth2();
                    }
                        else if (!w && contentObject.size.ToString().Equals("3"))
                        {
                        byteArrayBuilder.Append(e.Print("\x1b\x45\x01"));
                        //byteArrayBuilder.Append(e.SetStyles(PrintStyle.DoubleWidth));
                        //byteArrayBuilder.Append(e.SetStyles(PrintStyle.DoubleHeight));
                        //printer.DoubleWidth3();
                    }
                        else
                        {
                        byteArrayBuilder.Append(e.SetStyles(PrintStyle.None));
                        //printer.NormalWidth();
                    }


                        if (!(b) && !(u) && contentObject.bold && contentObject.underline)
                        {

                        byteArrayBuilder.Append(e.SetStyles(PrintStyle.Bold));
                        byteArrayBuilder.Append(e.SetStyles(PrintStyle.Underline));
                        }
                        else if (!(b) && !(u) && contentObject.bold && !(contentObject.underline))
                        {
                        byteArrayBuilder.Append(e.SetStyles(PrintStyle.Bold));
                        }
                        else if (!(b) && !(u) && contentObject.underline && !(contentObject.bold))
                        {
                        byteArrayBuilder.Append(e.SetStyles(PrintStyle.Underline));
                        }
                        else
                        {
                        byteArrayBuilder.Append(e.SetStyles(PrintStyle.None));
                        }


                        if (!(br) && v)
                        {
                        byteArrayBuilder.Append(e.SetBarcodeHeightInDots(300));
                        byteArrayBuilder.Append(e.SetBarWidth(BarWidth.Thin));
                        byteArrayBuilder.Append(e.SetBarLabelPosition(BarLabelPrintPosition.None));
                        byteArrayBuilder.Append(e.PrintBarcode(BarcodeType.CODE128, contentObject.barcode.ToString()));
                        byteArrayBuilder.Append(e.PrintLine(""));
                        }

                        if (!(qr) && v && !(w))
                        {
                            if (contentObject.size.ToString().Equals("1"))
                            {
                             byteArrayBuilder.Append(e.PrintQRCode(contentObject.qrcode.ToString(),TwoDimensionCodeType.QRCODE_MODEL2,Size2DCode.NORMAL,CorrectionLevel2DCode.PERCENT_7));
                             byteArrayBuilder.Append(e.PrintLine(""));
                                   
                                }
                            else if (contentObject.size.ToString().Equals("2"))
                            {
                             byteArrayBuilder.Append(e.PrintQRCode(contentObject.qrcode.ToString(), TwoDimensionCodeType.QRCODE_MODEL2, Size2DCode.LARGE, CorrectionLevel2DCode.PERCENT_7));
                            byteArrayBuilder.Append(e.PrintLine(""));
                                   
                                }
                            else if (contentObject.size.ToString().Equals("0"))
                            {
                            byteArrayBuilder.Append(e.PrintQRCode(contentObject.qrcode.ToString(), TwoDimensionCodeType.QRCODE_MODEL2, Size2DCode.SMALL, CorrectionLevel2DCode.PERCENT_7));
                            byteArrayBuilder.Append(e.PrintLine(""));
                                   
                                }
                            else
                            {
                            byteArrayBuilder.Append(e.PrintQRCode(contentObject.qrcode.ToString(), TwoDimensionCodeType.QRCODE_MODEL2, Size2DCode.LARGE, CorrectionLevel2DCode.PERCENT_7));
                            byteArrayBuilder.Append(e.PrintLine(""));
                                    
                            }

                        }

                        if (!contentObject.logoBase64String.ToString().IsNullOrEmpty() && v)
                        {
                            //Bitmap codeBitmap = new Bitmap(base64ImageToBitmap(contentObject.logoBase64String.ToString()));
                            //Image image = (Image)codeBitmap;
                            //ImageConverter converter = new ImageConverter();
                            //byteArrayBuilder.Append(e.PrintImage((byte[])converter.ConvertTo(image, typeof(byte[])), true));
                            //e.PrintImage(File.ReadAllBytes("images/pd-logo-300.png"), true),
                            //printer.Image(image);

                            }

                        if (!(v) && !(f) && contentObject.fontType.ToString().Equals("A"))
                        {
                        //https://escpos.readthedocs.io/en/latest/font_cmds.html
                        byteArrayBuilder.Append(e.Print("\x1b\x50\x01"));
                        byteArrayBuilder.Append(e.PrintLine(contentObject.value.ToString()));   
                        }
                        if (!(v) && !(f) && !f && contentObject.fontType.ToString().Equals("B"))
                        {
                           byteArrayBuilder.Append(e.SetStyles(PrintStyle.FontB));
                           byteArrayBuilder.Append(e.Print("\x1b\x50\x01"));
                           byteArrayBuilder.Append(e.PrintLine(contentObject.value.ToString()));
                         }
                        if (!(v) && !(f) && contentObject.fontType.ToString().Equals("C"))
                        {
                        //byteArrayBuilder.Append(e.SetStyles(PrintStyle.FontB));
                        byteArrayBuilder.Append(e.Print("\x1b\x54\x01"));
                        byteArrayBuilder.Append(e.PrintLine(contentObject.value.ToString()));
                        }
                        if (!(v) && !(f) && contentObject.fontType.ToString().Equals("D"))
                        {
                        byteArrayBuilder.Append(e.SetStyles(PrintStyle.FontB));
                        byteArrayBuilder.Append(e.Print("\x1b\x55\x01"));
                        byteArrayBuilder.Append(e.PrintLine(contentObject.value.ToString()));
                        }
                        if (!(v) && !(f) && contentObject.fontType.ToString().Equals("E"))
                        {
                        byteArrayBuilder.Append(e.Print("\x1b\x55\x01"));
                        byteArrayBuilder.Append(e.PrintLine(contentObject.value.ToString()));
                        }

                        if (!contentObject.newLines.ToString().IsNullOrEmpty() && contentObject.newLines > 1)
                        {
                                for(int x = 0; x < contentObject.newLines-1; x++) {
                                   byteArrayBuilder.Append(e.PrintLine(""));
                                }
                                
                        }

                        if (!contentObject.separator.ToString().IsNullOrEmpty())
                        {
                        byteArrayBuilder.Append(e.SetStyles(PrintStyle.None));
                        byteArrayBuilder.Append(e.CenterAlign());
                        //this one for 80mm paper role
                        string sep = "------------------------------------------------";
                        string newSep = "";
                        foreach(char ch in sep)
                        {
                            newSep = newSep + (contentObject.separator.ToString().ToCharArray()[0]);
                        }
                        byteArrayBuilder.Append(e.PrintLine(newSep));
                         
                        }
                    byteArrayBuilder.Append(e.SetStyles(PrintStyle.None));

                            i++;
                    }
                    i = 1;
                }

            byteArrayBuilder.Append(e.LeftAlign());
            byteArrayBuilder.Append(e.PrintLine(""));
            byteArrayBuilder.Append(e.PrintLine(""));
            byteArrayBuilder.Append(e.PrintLine(""));
            byteArrayBuilder.Append(e.PrintLine(""));
           
            if (!recieptJsonClass.autoCut.ToString().IsNullOrEmpty() && recieptJsonClass.autoCut)
            {
                byteArrayBuilder.Append(e.FullCut());
            }
            
           
            try
            {
                printerEpson.WriteAsync(byteArrayBuilder.ToArray());
            }
            catch(Exception ex)
            {
                throw ex;
            }
           
            byteArrayBuilder.Clear();
        }

        private void printByUSB(RecieptJsonClass recieptJsonClass)
    {

            // sample code pages
            //https://learn.microsoft.com/en-us/dotnet/api/system.text.encoding?view=net-7.0
            Printer printer = new Printer(recieptJsonClass.printerName.ToString());
            // Printer printer = new Printer(recieptJsonClass.printerName.ToString(), "CP720");
            // printer.Append("الأم جميلة جدا.");

            if (!recieptJsonClass.openDrawer.ToString().IsNullOrEmpty() && recieptJsonClass.openDrawer)
            {
                printer.OpenDrawer();
            }

            if (!recieptJsonClass.topLogoBase64String.ToString().IsNullOrEmpty())
        {
           // printer.Append("-------------------------");
            Bitmap image = new Bitmap(base64ImageToBitmap(recieptJsonClass.topLogoBase64String.ToString()));
           // Bitmap reSizedImage = new Bitmap(image, 100, 50);
            printer.AlignCenter();
                // printer.Image(reSizedImage);
                printer.Image(image);
            //    printer.Append("-------------------------");
                printer.NewLines(3);
        }

        int i = 1;
        if (recieptJsonClass.content.Count > 0)
        {
            foreach (var item in recieptJsonClass.content)
            {
                Content contentObject = JsonConvert.DeserializeObject<Content>(item.ToString());

                Boolean v = contentObject.value.ToString().IsNullOrEmpty();
                Boolean b = contentObject.bold.ToString().IsNullOrEmpty();
                Boolean u = contentObject.underline.ToString().IsNullOrEmpty();
                Boolean f = contentObject.fontType.ToString().IsNullOrEmpty();
                Boolean w = contentObject.size.ToString().IsNullOrEmpty();
                Boolean br = contentObject.barcode.ToString().IsNullOrEmpty();
                Boolean qr = contentObject.qrcode.ToString().IsNullOrEmpty();


                if (!contentObject.align.ToString().IsNullOrEmpty())
                {
                    if (contentObject.align == "left" || contentObject.align == "right" || contentObject.align == "center")
                    {

                        if (contentObject.align == "left")
                        {
                            printer.AlignLeft();
                        }
                        else if (contentObject.align == "right")
                        {
                            printer.AlignRight();

                        }
                        else if (contentObject.align == "center")
                        {
                            printer.AlignCenter();
                        }
                        else
                        {
                            printer.AlignLeft();
                        }
                    }
                }
                else
                {
                    printer.AlignLeft();
                }

                if (!w && contentObject.size.ToString().Equals("1"))
                {
                    printer.NormalWidth();
                }
                else if (!w && contentObject.size.ToString().Equals("2"))
                {
                    printer.DoubleWidth2();
                }
                else if (!w && contentObject.size.ToString().Equals("3"))
                {
                    printer.DoubleWidth3();
                }
                else
                {
                    printer.NormalWidth();
                }


                if (!(b) && !(u) && contentObject.bold && contentObject.underline)
                {
                    printer.BoldMode(PrinterModeState.On);
                    printer.UnderlineMode(PrinterModeState.On);
                }
                else if (!(b) && !(u) && contentObject.bold && !(contentObject.underline))
                {
                    printer.BoldMode(PrinterModeState.On);
                }
                else if (!(b) && !(u) && contentObject.underline && !(contentObject.bold))
                {
                    printer.UnderlineMode(PrinterModeState.On);
                }
                else
                {
                    printer.BoldMode(PrinterModeState.Off);
                    printer.UnderlineMode(PrinterModeState.Off);
                }


                if (!(br) && v)
                {
                    printer.Code128(contentObject.barcode.ToString());
                
                }

                if (!(qr) && v && !(w))
                {
                    if (contentObject.size.ToString().Equals("1"))
                    {
                        printer.QrCode(contentObject.qrcode.ToString(), QrCodeSize.Size1);
                   
                    }
                    else if (contentObject.size.ToString().Equals("2"))
                    {
                        printer.QrCode(contentObject.qrcode.ToString(), QrCodeSize.Size2);
                      
                    }
                    else if (contentObject.size.ToString().Equals("0"))
                    {
                        printer.QrCode(contentObject.qrcode.ToString(), QrCodeSize.Size0);
                       
                    }
                    else
                    {
                        printer.QrCode(contentObject.qrcode.ToString(), QrCodeSize.Size1);
                      
                    }

                }

                if (!contentObject.logoBase64String.ToString().IsNullOrEmpty() && v)
                {
                    Bitmap image = new Bitmap(base64ImageToBitmap(contentObject.logoBase64String.ToString()));
                    printer.Image(image);

                }

                if (!(v) && !(f) && contentObject.fontType.ToString().Equals("A"))
                {
                    printer.Font(contentObject.value.ToString(), Fonts.FontA);
                }
                if (!(v) && !(f) && !f && contentObject.fontType.ToString().Equals("B"))
                {
                    printer.Font(contentObject.value.ToString(), Fonts.FontB);
                }
                if (!(v) && !(f) && contentObject.fontType.ToString().Equals("C"))
                {
                    printer.Font(contentObject.value.ToString(), Fonts.FontC);
                }
                if (!(v) && !(f) && contentObject.fontType.ToString().Equals("D"))
                {
                    printer.Font(contentObject.value.ToString(), Fonts.FontD);
                }
                if (!(v) && !(f) && contentObject.fontType.ToString().Equals("E"))
                {
                    printer.Font(contentObject.value.ToString(), Fonts.FontE);
                }

                if (!contentObject.newLines.ToString().IsNullOrEmpty() && contentObject.newLines > 0)
                {
                    printer.NewLines(contentObject.newLines);
                }

                if (!contentObject.separator.ToString().IsNullOrEmpty())
                {
                    printer.Separator(contentObject.separator.ToCharArray()[0]);
                }


                //printer modes off
                printer.NormalWidth();
                printer.BoldMode(PrinterModeState.Off);
                printer.UnderlineMode(PrinterModeState.Off);

                i++;
            }
            i = 1;
        }
        printer.AlignLeft();
        printer.NewLine();
        if (!recieptJsonClass.autoCut.ToString().IsNullOrEmpty() && recieptJsonClass.autoCut)
        {
            printer.FullPaperCut();
        }
            try
            {
              
                printer.PrintDocument();
            }
            catch(Exception ex)
            {
                throw ex;
            }
       
    }
    protected override void OnMessage(MessageEventArgs e)
    {

        try
        {
            if (e.Data != null)
            {

                var recieptJsonClassObj = JsonConvert.DeserializeObject<RecieptJsonClass>(e.Data);
                if (!recieptJsonClassObj.printerName.ToString().IsNullOrEmpty())
                {
                        if (recieptJsonClassObj.printerName.ToString().Contains("IP="))
                        {
                            printByIPAddress(recieptJsonClassObj);
                        }

                        else if (recieptJsonClassObj.printerName.ToString().Contains("BLUETOOTH="))
                        {
                            printByBluetooth(recieptJsonClassObj);
                        }

                        else if (!recieptJsonClassObj.printerName.ToString().Contains("USB="))
                        {
                            printByUSB(recieptJsonClassObj);
                        }

                        else if (!recieptJsonClassObj.printerName.ToString().Contains("IP=")
                            && !recieptJsonClassObj.printerName.ToString().Contains("BLUETOOTH=")
                            )
                        {
                            printByUSB(recieptJsonClassObj);
                        }

                    }

            }
        }
        catch (Exception ex)
        {
            Console.WriteLine(ex);
        }
        //Broadcast/send to all the data to other end points "ws://127.0.0.1:7890/POSMSG You Send Data :"
        Sessions.Broadcast(e.Data);
    }
}

internal static class Program
    {
        /// <summary>
        /// The main entry point for the application.
        /// </summary>
        [STAThread]
        static void Main()
        {

            //background-startup time auto run
            //RegistryKey rkApp = Registry.LocalMachine.OpenSubKey("SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run", true);
            //rkApp.SetValue("ESCPOSThermalPrinterUSBSupport", Assembly.GetExecutingAssembly().Location);
            //localhost:7890 == ip => 127.0.0.1:7890  Web socket API end point define
            WebSocketServer wssv = new WebSocketServer("ws://127.0.0.1:7890");
            wssv.AddWebSocketService<POSMSGES>("/POSMSGES");
            wssv.AddWebSocketService<AccessListOfPrinters>("/PRINTERS");
            wssv.AddWebSocketService<AccessListOfBluetoothPrinters>("/BLUETOOTHDEVICES");

            wssv.Start();
            // wssv.Stop();

            Application.EnableVisualStyles();
            Application.SetCompatibleTextRenderingDefault(false);
            Application.Run(new Form1());


           
        }
    }
}
